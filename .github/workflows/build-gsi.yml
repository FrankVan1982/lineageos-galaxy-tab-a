name: Build LineageOS 22 GSI (TrebleDroid)

on:
  # Trigger manualmente dal tab Actions
  workflow_dispatch:
    inputs:
      variant:
        description: 'Build variant (arm64-ab or arm64-ab-gapps)'
        required: true
        default: 'arm64-ab'
        type: choice
        options:
          - arm64-ab
          - arm64-ab-gapps
      
      clean_build:
        description: 'Clean build (rimuove tutto e ricomincia da zero)'
        required: false
        default: false
        type: boolean

env:
  MANIFEST_BRANCH: lineageos-22.0
  DEVICE_VARIANT: ${{ github.event.inputs.variant }}
  
jobs:
  build:
    runs-on: ubuntu-24.04
    
    steps:
      - name: 📋 Informazioni Build
        run: |
          echo "🚀 Avvio build LineageOS 22 GSI"
          echo "📱 Variante: ${{ github.event.inputs.variant }}"
          echo "🧹 Clean build: ${{ github.event.inputs.clean_build }}"
          echo "💾 Runner: $(lsb_release -d | cut -f2)"
          echo "🖥️ CPU: $(nproc) cores"
          echo "💿 RAM: $(free -h | awk '/^Mem:/ {print $2}')"
          echo "📀 Spazio disponibile: $(df -h / | awk 'NR==2 {print $4}')"
      
      - name: 🔧 Preparazione ambiente Ubuntu
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git-core gnupg flex bison build-essential zip curl \
            zlib1g-dev libc6-dev-i386 libncurses6 x11proto-core-dev \
            libx11-dev lib32z1-dev libgl1-mesa-dev libxml2-utils \
            xsltproc unzip fontconfig python3 python3-pip python-is-python3 \
            bc bzip2 ca-certificates ccache clang cmake curl flex g++ \
            gcc git gnupg gperf imagemagick lib32ncurses6-dev \
            lib32readline-dev lib32z1-dev liblz4-tool libncurses6 \
            libncurses6-dev libsdl1.2-dev libssl-dev libxml2 \
            libxml2-utils lzop pngcrush rsync schedtool squashfs-tools \
            xsltproc zip zlib1g-dev openjdk-17-jdk repo jq
      
      - name: 📦 Installazione Repo
        run: |
          mkdir -p ~/.bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/.bin/repo
          chmod a+rx ~/.bin/repo
          echo "$HOME/.bin" >> $GITHUB_PATH
      
      - name: ⚙️ Configurazione Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git config --global color.ui false
      
      - name: 💾 Setup ccache
        uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ccache-lineage22-${{ github.event.inputs.variant }}-${{ github.run_id }}
          restore-keys: |
            ccache-lineage22-${{ github.event.inputs.variant }}-
            ccache-lineage22-
      
      - name: 🔄 Configurazione ccache
        run: |
          mkdir -p ~/.ccache
          echo "max_size = 50G" > ~/.ccache/ccache.conf
          echo "compression = true" >> ~/.ccache/ccache.conf
          echo "compression_level = 6" >> ~/.ccache/ccache.conf
          ccache -M 50G
          ccache -z
      
      - name: 📥 Clone TrebleDroid scripts
        run: |
          cd ~
          git clone https://github.com/TrebleDroid/treble_experimentations.git
          cd treble_experimentations
          git log -1
      
      - name: 🗑️ Pulizia build precedente (se richiesta)
        if: github.event.inputs.clean_build == 'true'
        run: |
          echo "Rimozione build precedente..."
          rm -rf ~/lineage22
          ccache -C
      
      - name: 🏗️ Creazione directory di build
        run: |
          mkdir -p ~/lineage22
          cd ~/lineage22
      
      - name: 📲 Sync sorgenti LineageOS 22
        run: |
          cd ~/lineage22
          
          # Inizializza repo con manifest TrebleDroid
          repo init -u https://github.com/LineageOS/android.git -b lineageos-22.0 --git-lfs --depth=1
          
          # Aggiungi local_manifests per TrebleDroid
          mkdir -p .repo/local_manifests
          
          cat > .repo/local_manifests/treble.xml << 'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <manifest>
            <!-- TrebleDroid -->
            <remote name="tdroid" fetch="https://github.com/TrebleDroid/" />
            
            <project path="device/phh/treble" name="device_phh_treble" remote="tdroid" revision="android-15.0" />
            <project path="vendor/hardware_overlay" name="vendor_hardware_overlay" remote="tdroid" revision="android-15.0" />
            
            <!-- Replace AOSP packages -->
            <remove-project name="LineageOS/android_frameworks_base" />
            <project path="frameworks/base" name="platform_frameworks_base" remote="tdroid" revision="android-15.0" />
            
            <remove-project name="LineageOS/android_system_core" />
            <project path="system/core" name="platform_system_core" remote="tdroid" revision="android-15.0" />
            
            <remove-project name="LineageOS/android_system_sepolicy" />
            <project path="system/sepolicy" name="platform_system_sepolicy" remote="tdroid" revision="android-15.0" />
            
            <remove-project name="LineageOS/android_vendor_lineage" />
            <project path="vendor/lineage" name="platform_vendor_lineage" remote="tdroid" revision="android-15.0" />
          </manifest>
          EOF
          
          echo "📥 Inizio sync dei sorgenti (può richiedere 2-3 ore)..."
          repo sync -c -j$(nproc) --force-sync --no-clone-bundle --no-tags --optimized-fetch --prune
      
      - name: 🔨 Apply patches TrebleDroid
        run: |
          cd ~/lineage22
          
          # Apply patches dallo script TrebleDroid
          bash ~/treble_experimentations/apply-patches.sh ~/treble_experimentations trebledroid
          
          # Verifica che le patch siano applicate
          echo "✅ Patches applicate con successo"
      
      - name: 🎯 Setup ambiente build
        run: |
          cd ~/lineage22
          source build/envsetup.sh
          
          # Imposta variabili per ottimizzare la build
          export USE_CCACHE=1
          export CCACHE_DIR=~/.ccache
          export CCACHE_EXEC=/usr/bin/ccache
          
          # Per evitare OOM su GitHub Actions (7GB RAM)
          export JACK_SERVER_VM_ARGUMENTS="-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx4g"
      
      - name: 🚀 Build GSI
        run: |
          cd ~/lineage22
          source build/envsetup.sh
          
          export USE_CCACHE=1
          export CCACHE_DIR=~/.ccache
          
          # Determina il target in base alla variante
          if [[ "${{ github.event.inputs.variant }}" == "arm64-ab-gapps" ]]; then
            export WITH_GAPPS=true
          fi
          
          # Build command
          echo "🔨 Avvio build per ${{ github.event.inputs.variant }}"
          
          # TrebleDroid usa treble_arm64_bvN per arm64-ab
          lunch treble_arm64_bvN-ap2a-userdebug
          
          # Build con numero limitato di job per evitare OOM
          make -j$(nproc) systemimage
          
          echo "✅ Build completata!"
      
      - name: 📦 Comprimi immagine GSI
        run: |
          cd ~/lineage22
          
          # Trova il system.img
          SYSTEM_IMG=$(find out/target/product/tdgsi_arm64_ab/system*.img 2>/dev/null | head -1)
          
          if [ -z "$SYSTEM_IMG" ]; then
            echo "❌ system.img non trovato!"
            exit 1
          fi
          
          echo "📦 Comprimo $SYSTEM_IMG"
          
          # Crea directory output
          mkdir -p ~/output
          
          # Comprimi con xz
          xz -9 -T0 -c "$SYSTEM_IMG" > ~/output/lineageos-22.0-${{ github.event.inputs.variant }}-$(date +%Y%m%d).img.xz
          
          # Calcola hash
          cd ~/output
          sha256sum *.img.xz > sha256sum.txt
          
          echo "✅ Compressione completata"
          ls -lh ~/output/
      
      - name: 📊 Statistiche ccache
        run: |
          ccache -s
      
      - name: 📤 Upload GSI come artifact
        uses: actions/upload-artifact@v4
        with:
          name: lineageos-22-gsi-${{ github.event.inputs.variant }}-${{ github.run_number }}
          path: ~/output/*
          retention-days: 30
          compression-level: 0
      
      - name: 🎉 Build completata!
        run: |
          echo "=========================================="
          echo "✅ Build completata con successo!"
          echo "=========================================="
          echo "📱 ROM: LineageOS 22"
          echo "🎯 Variante: ${{ github.event.inputs.variant }}"
          echo "📅 Data: $(date)"
          echo "=========================================="
          echo ""
          echo "📥 Scarica l'artifact dal tab Actions di questa build"
          echo ""
          echo "⚠️ IMPORTANTE:"
          echo "1. Questa è una GSI arm64-ab (NON vndklite)"
          echo "2. Usa il tuo boot.img con kernel TGK"
          echo "3. Usa il tuo vendor.img esistente"
          echo ""
          echo "🔧 Flash sul dispositivo:"
          echo "  adb reboot recovery"
          echo "  # In TWRP:"
          echo "  # Install > Install Image > seleziona lineageos-22.0-*.img.xz"
          echo "  # Seleziona System Image"
          echo "  # Reflash boot.img e vendor.img se necessario"
          echo "=========================================="
